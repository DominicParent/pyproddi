// Copyright Â© Her Majesty the Queen in Right of Canada, as represented
// by the Minister of Statistics Canada, 2020.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ddicdi;

message Concept {
    repeated string ConceptName = 1;
    string Description = 2;
    repeated Concept ExcludesConceptReference = 3;
    repeated Concept IncludesConceptReference = 4;
    string IsCharacteristic = 5;
    repeated string Label = 6;
    repeated Concept SimilarConcept = 7;
    repeated Concept SubclassOfReference = 8;
}

// Filler class.
message CategoryScheme {
    string Name = 1;
}

// Filler class.
message UnitType {
    string Name = 1;
}

message ConceptualVariable {
    CategoryScheme CategorySchemeReference = 1;
    Concept ConceptReference = 2;
    repeated string ConceptualVariableName = 3;
    string Description = 4;
    repeated string Label = 5;
    UnitType UnitTypeReference = 6;
    }

// Filler class.
message ManagedRepresentation {
    string Name = 1;
}

message RepresentedVariable {
    CategoryScheme CategorySchemeReference = 1;
    Concept ConceptReference = 2;
    ConceptualVariable ConceptualVariableReference = 3;
    string Description = 4;
    repeated string Label = 5;
    repeated string RepresentedVariableName = 6;
    UnitType UnitTypeReference = 7;
    string ValueRepresentation = 8;
    ManagedRepresentation ValueRepresentationReference = 9;
    }

// Filler class.
message MeasurementItem {
    string Name = 1;
}

// Filler class.
message Question {
    string Name = 1;
}

// Filler class.
message Universe {
    string Name = 1;
}

// Filler class.
message Weighting {
    string Name = 1;
}

message Variable {
    string AnalysisUnit = 1;
    Concept ConceptReference = 2;
    ConceptualVariable ConceptualVariableReference = 3;
    string Description = 4;
    string EmbargoReference = 5;
    bool IsGeographic = 6;
    bool IsTemporal = 7;
    bool IsWeight = 8;
    repeated string Label = 9;
    repeated MeasurementItem MeasurementReference = 10;
    string OutParameter = 11;
    repeated Question QuestionReference = 12;
    RepresentedVariable RepresentedVariableReference = 13;
    string SourceParameterReference = 14;
    string SourceUnit = 15;
    repeated Variable SourceVariableReference = 16;
    UnitType UnitTypeReference = 17;
    repeated Universe UniverseReference = 18;
    string VariableRepresentation = 19;
    Weighting WeightingProcessReference = 20;
}

// Filler class.
message MissingValuesReference {
    string Name = 1;
}

message VariableStatistics {
    repeated string FilteredCategoryStatistics = 1;
    MissingValuesReference ManagedMissingValuesRepresentation = 2;
    string StandardWeightReference = 3;
    repeated string SummaryStatistic = 4;
    string TotalResponses = 5;
    repeated string UnfilteredCategoryStatistics = 6;
    Variable VariableReference = 7;
    Variable WeightVariableReference = 8;
}

message VariableGroup {
    Concept ConceptReference = 1;
    string Description = 2;
    bool IsOrdered = 3;
    repeated string Keyword = 4;
    repeated string Label = 5;
    repeated string Subject = 6;
    string TypeOfVariableGroup = 7;
    Universe UniverseReference = 8;
    repeated string VariableGroupName = 9;
    VariableGroup VariableGroupReference = 10;
    Variable VariableReference = 11;
}

message VariableScheme {
    string Description = 1;
    repeated string Label = 2;
    repeated VariableGroup VariableGroupeReference = 3;
    repeated Variable VariableReference = 4;
    repeated string VariableSchemeName = 5;
    repeated VariableScheme VariableSchemeReference = 6;
}

message Dataset {
    string ArrayBase = 1;
    repeated string DataSetName = 2;
    VariableScheme DefaultVariableSchemeReference = 3;
    Variable IdentifyingVariableReference = 4;
    string ItemSet = 5;
    string RecordSet = 6;
    string VariableSet = 7;
}

message RecordLayout {
    string ArryaBase = 1;
    string CharacterSet = 2;
    repeated string DataItem = 3;
    VariableScheme DefaultVariableSchemeReference = 4;
    bool NamesOnFirstRow = 5;
}

// Filler class.
message DataRelationship {
    string Name = 1;
}

// Filler class.
message ManagedMissingValuesRepresentation {
    string Name = 1;
}

// Filler class.
message InformationClassification {
    string Name = 1;
}

// Filler class.
message QualityStatement {
    string Name = 1;
}

message PhysicalInstance {
    string ByteOrder = 1;
    string Citation = 2;
    string Coverage = 3;
    repeated string DataFileIdentification = 4;
    string DataFileVersion = 5;
    repeated string DataFingerprint = 6;
    repeated DataRelationship DataRelationshipReference = 7;
    ManagedMissingValuesRepresentation DefaultMissingValuesReference = 8;
    string GrossFileStructure = 9;
    repeated InformationClassification InformationClassificationReference = 10;
    bool ProprietaryInfo = 11;
    repeated QualityStatement QualityStatementReference = 12;
    repeated RecordLayout RecordLayoutReference = 13;
    string StatisticalSummary = 14;
    repeated VariableGroup VariableGroupReference = 15;
}

// Filler class.
message RepresentedVariableGroup {
    string Name = 1;
}

message RepresentedVariableScheme {
    string Description = 1;
    repeated string Label = 2;
    repeated RepresentedVariableGroup RepresentedVariableGroupReference = 3;
    repeated RepresentedVariable RepresentedVariableReference = 4;
    repeated string RepresentedVariableSchemeName = 5;
    repeated RepresentedVariableScheme RepresentedVariableSchemeReference = 6;
}

// Filler class.
message CodeListScheme {
    string Name = 1;
}

// Filler class.
message ManagedRepresentationScheme {
    string Name = 1;
}

// Filler class.
message CubeScheme {
    string Name = 1;
}

message LogicalProduct {
    repeated CategoryScheme CategorySchemeReference = 1;
    repeated CodeListScheme CodeListSchemeReference = 2;
    repeated ManagedRepresentationScheme ManagedRepresentationSchemeReference = 3;
    repeated CubeScheme NCubeSchemeReference = 4;
    repeated RepresentedVariableScheme RepresentedVariableSchemeReference = 5;
    repeated VariableScheme VariableSchemeReference = 6;
}

message RecordLayoutGroup {
    Concept ConceptReference = 1;
    string Description = 2;
    bool IsOrdered = 3;
    repeated string Keyword = 4;
    repeated string Label = 5;
    repeated string RecordLayoutGroupName = 6;
    RecordLayoutGroup RecordLayoutGroupReference = 7;
    RecordLayout RecordLayoutReference = 8;
    repeated string Subject = 9;
    string TypeOfRecordLayoutGroup = 10;
    repeated Universe UniverseReference = 11;
}

message PhysicalStructure {
    string DefaultDataType = 1;
    string DefaultDecimalPositions = 2;
    string DefaultDecimalSeparator = 3;
    string DefaultDelimiter = 4;
    string DefaultDigitGroupSeparator = 5;
    string Description = 6;
    string FileFormat = 7;
    repeated string GrossRecordStructure = 8;
    repeated string Label = 9;
    repeated string PhysicalStructureName = 10;
}

message BaseRecordLayout {
    string EndOfLineMarker = 1;
    PhysicalStructure PhysicalStructureLinkReference = 2;
    string TextQualifier = 3;
}

message PhysicalStructureGroup {
    Concept ConceptReference = 1;
    string Description = 2;
    bool IsOrdered = 3;
    repeated string Keyword = 4;
    repeated string Label = 5;
    repeated string PhysicalStructureGroupName = 6;
    PhysicalStructureGroup PhysicalStructureReference = 7;
    repeated string Subject = 8;
    string TypeOfPhysicalStructureGroup = 9;
    repeated Universe UniverseReference = 10;
}
